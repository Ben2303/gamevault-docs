"use strict";(self.webpackChunkcrackpipe_docs=self.webpackChunkcrackpipe_docs||[]).push([[3559],{9613:(t,e,a)=>{a.d(e,{Zo:()=>d,kt:()=>k});var n=a(9496);function r(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function l(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?l(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function o(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},l=Object.keys(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var p=n.createContext({}),u=function(t){var e=n.useContext(p),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},d=function(t){var e=u(t.components);return n.createElement(p.Provider,{value:e},t.children)},m="mdxType",s={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},g=n.forwardRef((function(t,e){var a=t.components,r=t.mdxType,l=t.originalType,p=t.parentName,d=o(t,["components","mdxType","originalType","parentName"]),m=u(a),g=r,k=m["".concat(p,".").concat(g)]||m[g]||s[g]||l;return a?n.createElement(k,i(i({ref:e},d),{},{components:a})):n.createElement(k,i({ref:e},d))}));function k(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=a.length,i=new Array(l);i[0]=g;var o={};for(var p in e)hasOwnProperty.call(e,p)&&(o[p]=e[p]);o.originalType=t,o[m]="string"==typeof t?t:r,i[1]=o;for(var u=2;u<l;u++)i[u]=a[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}g.displayName="MDXCreateElement"},7037:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>p,contentTitle:()=>i,default:()=>s,frontMatter:()=>l,metadata:()=>o,toc:()=>u});var n=a(1163),r=(a(9496),a(9613));const l={sidebar_position:2},i="Configuration",o={unversionedId:"server-docs/configuration",id:"server-docs/configuration",title:"Configuration",description:"Check out configuration.ts for all possible environment variables.",source:"@site/docs/server-docs/configuration.md",sourceDirName:"server-docs",slug:"/server-docs/configuration",permalink:"/docs/server-docs/configuration",draft:!1,editUrl:"https://github.com/phalcode/crackpipe-docs/tree/master/docs/server-docs/configuration.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"docs",previous:{title:"Setting up a Crackpipe Server",permalink:"/docs/server-docs/setup"},next:{title:"File and Folder Structure",permalink:"/docs/server-docs/structure"}},p={},u=[{value:"Server Configuration Properties",id:"server-configuration-properties",level:2},{value:"Database Configuration Properties",id:"database-configuration-properties",level:2},{value:"RAWG API Configuration Properties",id:"rawg-api-configuration-properties",level:2},{value:"CRON Configuration Properties",id:"cron-configuration-properties",level:2},{value:"Testing Configuration Properties",id:"testing-configuration-properties",level:2}],d={toc:u},m="wrapper";function s(t){let{components:e,...a}=t;return(0,r.kt)(m,(0,n.Z)({},d,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"configuration"},"Configuration"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Check out ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/Phalcode/crackpipe-backend/blob/master/src/configuration.ts"},"configuration.ts")," for all possible environment variables.")),(0,r.kt)("p",null,"All configuration properties of your Crackpipe server are passed as environment variables or via a .env file. The following tables describe the available properties, their default values, explanations, and possible values."),(0,r.kt)("h2",{id:"server-configuration-properties"},"Server Configuration Properties"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Property Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Default Value"),(0,r.kt)("th",{parentName:"tr",align:null},"Explanation"),(0,r.kt)("th",{parentName:"tr",align:null},"Possible Values"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"TZ"),(0,r.kt)("td",{parentName:"tr",align:null},"Europe/Berlin"),(0,r.kt)("td",{parentName:"tr",align:null},"The timezone the server should run on"),(0,r.kt)("td",{parentName:"tr",align:null},"Any valid Timezone")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"SERVER_PORT"),(0,r.kt)("td",{parentName:"tr",align:null},"8080"),(0,r.kt)("td",{parentName:"tr",align:null},"The port the server should listen on"),(0,r.kt)("td",{parentName:"tr",align:null},"Any valid port number")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"SERVER_LOG_LEVEL"),(0,r.kt)("td",{parentName:"tr",align:null},"info"),(0,r.kt)("td",{parentName:"tr",align:null},"The Log Level (debug, info, warn, error, fatal)"),(0,r.kt)("td",{parentName:"tr",align:null},"debug, info, warn, error, fatal")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"SERVER_CORS_ALLOWED_ORIGINS"),(0,r.kt)("td",{parentName:"tr",align:null},"*"),(0,r.kt)("td",{parentName:"tr",align:null},"Allowed CORS origins"),(0,r.kt)("td",{parentName:"tr",align:null},"Any valid CORS origin")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"SERVER_IMAGE_STORAGE_PATH"),(0,r.kt)("td",{parentName:"tr",align:null},"/images"),(0,r.kt)("td",{parentName:"tr",align:null},"The path where images will be stored"),(0,r.kt)("td",{parentName:"tr",align:null},"Any valid file path")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"SERVER_REGISTRATION_ENABLED"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},"Whether or not registration is enabled"),(0,r.kt)("td",{parentName:"tr",align:null},"true, false")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"SERVER_ACCOUNT_ACTIVATION_ENABLED"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},"Whether or not account activation is required for new users"),(0,r.kt)("td",{parentName:"tr",align:null},"true, false")))),(0,r.kt)("h2",{id:"database-configuration-properties"},"Database Configuration Properties"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Property Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Default Value"),(0,r.kt)("th",{parentName:"tr",align:null},"Explanation"),(0,r.kt)("th",{parentName:"tr",align:null},"Possible Values"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"DB_SYSTEM"),(0,r.kt)("td",{parentName:"tr",align:null},"POSTGRESQL"),(0,r.kt)("td",{parentName:"tr",align:null},"The host of the database (POSTGRESQL or SQLITE)"),(0,r.kt)("td",{parentName:"tr",align:null},"POSTGRESQL, SQLITE")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"DB_HOST"),(0,r.kt)("td",{parentName:"tr",align:null},"localhost"),(0,r.kt)("td",{parentName:"tr",align:null},"The host of the database (not needed for SQLITE)"),(0,r.kt)("td",{parentName:"tr",align:null},"Any valid host name")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"DB_PORT"),(0,r.kt)("td",{parentName:"tr",align:null},"5432"),(0,r.kt)("td",{parentName:"tr",align:null},"The port of the database (not needed for SQLITE)"),(0,r.kt)("td",{parentName:"tr",align:null},"Any valid port number")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"DB_USERNAME"),(0,r.kt)("td",{parentName:"tr",align:null},"default"),(0,r.kt)("td",{parentName:"tr",align:null},"The username of the database (not needed for SQLITE)"),(0,r.kt)("td",{parentName:"tr",align:null},"Any valid string")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"DB_PASSWORD"),(0,r.kt)("td",{parentName:"tr",align:null},"default"),(0,r.kt)("td",{parentName:"tr",align:null},"The password of the database (not needed for SQLITE)"),(0,r.kt)("td",{parentName:"tr",align:null},"Any valid string")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"DB_DATABASE"),(0,r.kt)("td",{parentName:"tr",align:null},"crackpipe"),(0,r.kt)("td",{parentName:"tr",align:null},"The name of the database (not needed for SQLITE)"),(0,r.kt)("td",{parentName:"tr",align:null},"Any valid string")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"DB_LOCATION"),(0,r.kt)("td",{parentName:"tr",align:null},"/db"),(0,r.kt)("td",{parentName:"tr",align:null},"The path of the Sqlite DB (not needed for POSTGRESQL)"),(0,r.kt)("td",{parentName:"tr",align:null},"Any valid file path")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"DB_SYNCHRONIZE"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"Whether or not to synchronize the database (Use if create table failure occurs but watch out it could break your db)"),(0,r.kt)("td",{parentName:"tr",align:null},"true, false")))),(0,r.kt)("h2",{id:"rawg-api-configuration-properties"},"RAWG API Configuration Properties"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Property Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Default Value"),(0,r.kt)("th",{parentName:"tr",align:null},"Explanation"),(0,r.kt)("th",{parentName:"tr",align:null},"Possible Values"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"RAWG_API_URL"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://api.rawg.io/api"},"https://api.rawg.io/api")),(0,r.kt)("td",{parentName:"tr",align:null},"The base URL of RAWG API"),(0,r.kt)("td",{parentName:"tr",align:null},"Any valid URL")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"RAWG_API_KEY"),(0,r.kt)("td",{parentName:"tr",align:null},"123456789"),(0,r.kt)("td",{parentName:"tr",align:null},"The API KEY for Rawg API You can obtain one ",(0,r.kt)("a",{parentName:"td",href:"https://rawg.io/login/?forward=developer"},"here")),(0,r.kt)("td",{parentName:"tr",align:null},"Any valid string")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"RAWG_API_CACHE_DAYS"),(0,r.kt)("td",{parentName:"tr",align:null},"7"),(0,r.kt)("td",{parentName:"tr",align:null},"The number of days to renew Rawg API cached data"),(0,r.kt)("td",{parentName:"tr",align:null},"Any valid number of days")))),(0,r.kt)("h2",{id:"cron-configuration-properties"},"CRON Configuration Properties"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Property Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Default Value"),(0,r.kt)("th",{parentName:"tr",align:null},"Explanation"),(0,r.kt)("th",{parentName:"tr",align:null},"Possible Values"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"CRON_INDEX_INTERVAL_IN_MINUTES"),(0,r.kt)("td",{parentName:"tr",align:null},"5"),(0,r.kt)("td",{parentName:"tr",align:null},"The interval in minutes for file API indexing"),(0,r.kt)("td",{parentName:"tr",align:null},"Any valid number of minutes")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"CRON_IMAGE_GC_IN_MINUTES"),(0,r.kt)("td",{parentName:"tr",align:null},"60"),(0,r.kt)("td",{parentName:"tr",align:null},"The interval in minutes for image garbage collection"),(0,r.kt)("td",{parentName:"tr",align:null},"Any valid number of minutes")))),(0,r.kt)("h2",{id:"testing-configuration-properties"},"Testing Configuration Properties"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Property Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Default Value"),(0,r.kt)("th",{parentName:"tr",align:null},"Explanation"),(0,r.kt)("th",{parentName:"tr",align:null},"Possible Values"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"TESTING_AUTHENTICATION_DISABLED"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"Whether or not to accept any auth Header during testing"),(0,r.kt)("td",{parentName:"tr",align:null},"true, false")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"TESTING_MOCK_FILES"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"Whether or not to mock existing game files during testing"),(0,r.kt)("td",{parentName:"tr",align:null},"true, false")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"TESTING_IN_MEMORY_DB"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"Whether or not to use fake in-memory database during testing (only with sqlite)"),(0,r.kt)("td",{parentName:"tr",align:null},"true, false")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"TESTING_RAWG_API_DISABLED"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"Whether or not to make requests to RAWG API for metadata"),(0,r.kt)("td",{parentName:"tr",align:null},"true, false")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"TESTING_GOOGLE_API_DISABLED"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"Whether or not to make requests to GOOGLE API for images"),(0,r.kt)("td",{parentName:"tr",align:null},"true, false")))))}s.isMDXComponent=!0}}]);